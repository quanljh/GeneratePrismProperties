<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:local="clr-namespace:GeneratePrismProperties"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Style/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  *********************************  Converters  *********************************  -->
    <igPrim:ValueConverterGroup x:Key="BoolToVisibility">
        <!--  if true sets visibility to Visible  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <system:Boolean>
                    True
                </system:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>
                    Visible
                </Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
        <!--  if false sets visibility to Collapsed  -->
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.DestinationValue>
                <Visibility>
                    Collapsed
                </Visibility>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <!--  *********************************  TextBox Style  *********************************  -->
    <Style x:Key="SpecializedTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBlackBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource RegularFont}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement" SnapsToDevicePixels="True">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="1" />
                            <Border
                                x:Name="DisabledVisualElement"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                            <Border
                                x:Name="ReadOnlyVisualElement"
                                Background="{StaticResource BackgroundLightGrayBrush}"
                                BorderBrush="{StaticResource BackgroundLightGrayBrush}"
                                Opacity="0" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="0"
                                IsTabStop="False" />
                        </Grid>
                        <Border
                            x:Name="FocusVisualElement"
                            BorderBrush="{StaticResource BackgroundLightGrayBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Border
                            x:Name="ValidationErrorElement"
                            BorderBrush="{StaticResource ErrorRedBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip
                                    x:Name="validationTooltip"
                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Right"
                                    PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                            </ToolTipService.ToolTip>
                            <Grid
                                Width="12"
                                Height="12"
                                Margin="1,-4,-4,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Background="Transparent">
                                <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ErrorRedBrush}" />
                                <Path Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource BackgroundWhiteBrush}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ReadOnlyVisualElement"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboEditorToggleButton Style   *********************************  -->
    <Style x:Key="ComboEditorToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBlackBrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Main">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="23" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Bd" Grid.ColumnSpan="2" Fill="Transparent" />
                        <Grid Grid.Column="1" HorizontalAlignment="Center">
                            <Polygon
                                x:Name="Arrow"
                                VerticalAlignment="Center"
                                Fill="{StaticResource ForegroundBlackBrush}"
                                Points="0 0 5 5 10 0" />
                        </Grid>
                    </Grid>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphHoverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlyphActiveBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ******************************************* PopupResizer Style   *************************************  -->
    <Style x:Key="PopupResizerStyle" TargetType="igPrim:PopupResizer">
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightGrayBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundWhiteBrush}" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PopupResizer">
                    <Border Height="{TemplateBinding Height}">
                        <Grid>
                            <Grid x:Name="BelowPosition" Margin="0">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Grid.RenderTransform>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border
                                    x:Name="resizer"
                                    Grid.ColumnSpan="2"
                                    Margin="0,-2,0,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1" />

                                <Border
                                    x:Name="ResizeElem"
                                    Grid.Column="1"
                                    VerticalAlignment="Bottom"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Cursor="SizeNWSE">
                                    <Grid
                                        x:Name="BelowDots"
                                        Width="7"
                                        Height="7"
                                        Margin="0,0,2,2"
                                        VerticalAlignment="Bottom">
                                        <Rectangle
                                            x:Name="BelowDot1"
                                            Width="2"
                                            Height="2"
                                            Margin="0,0,4,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Fill="{StaticResource BackgroundLightGrayBrush}" />
                                        <Rectangle
                                            x:Name="BelowDot2"
                                            Width="2"
                                            Height="2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Fill="{StaticResource BackgroundLightGrayBrush}" />
                                        <Rectangle
                                            x:Name="BelowDot3"
                                            Width="2"
                                            Height="2"
                                            Margin="0,0,0,4"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Fill="{StaticResource BackgroundLightGrayBrush}" />
                                        <Rectangle x:Name="TouchableZone" Margin="-20,-12,-12,-12" Fill="Transparent" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FlowDirections">
                                <VisualState x:Name="LTR" />
                                <VisualState x:Name="RTL">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>SizeNESW</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AboveLTR">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>SizeNESW</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AboveRTL">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResizeElem" Storyboard.TargetProperty="Cursor">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Cursor>SizeNWSE</Cursor>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="Position">
                                <VisualState x:Name="Below" />
                                <VisualState x:Name="Above">
                                    <Storyboard>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="0.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BelowPosition" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *********************************  ComboEditorItemControl Style  *********************************  -->
    <Style x:Key="ComboEditorItemControlStyle" TargetType="ig:ComboEditorItemControl">
        <Setter Property="FontFamily" Value="{StaticResource RegularFont}" />
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundBlueBrush}" />
        <Setter Property="Padding" Value="4,2,6,2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:ComboEditorItemControl">
                    <Grid>
                        <Rectangle
                            x:Name="Bd"
                            Fill="{TemplateBinding Background}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="FocusedVisualElement" BorderBrush="{StaticResource BackgroundLightGrayBrush}" BorderThickness="1,0,1,1" />
                        <Border
                            x:Name="hoverRectangle"
                            Background="{StaticResource BackgroundLightBlueBrush}"
                            BorderBrush="{StaticResource BackgroundLightGrayBrush}"
                            BorderThickness="1,0,1,1"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <!--<Rectangle
                            x:Name="selectedRectangle"
                            Fill="{StaticResource ComboBoxItemPressedBackgroundBrush}"
                            IsHitTestVisible="False"
                            Opacity="0" />-->
                        <Grid x:Name="content" Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <CheckBox
                                x:Name="SelectedCheckbox"
                                Margin="0,0,5,0"
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <ContentControl x:Name="contentControl" Grid.Column="1" Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="0,2,6,2"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </ContentControl>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hoverRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackgroundWhiteBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="content"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.3"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                            -->
                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="selectedRectangle" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>-->
                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBlackBrush}" />
                                        </ObjectAnimationUsingKeyFrames>-->
                            <!--
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>-->
                            <!--<VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusedVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>-->
                            <VisualStateGroup x:Name="SelectionModeStates">
                                <VisualState x:Name="CheckBox">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedCheckbox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Standard" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ComboEditorItemControlStyle}" TargetType="ig:ComboEditorItemControl" />

    <!--  *********************************  XamComboEditor Style  *********************************  -->
    <Style x:Key="XamComboEditorStyle" TargetType="local:CustomComboEditor">
        <Setter Property="FontSize" Value="{StaticResource FontSizeRegular}" />
        <Setter Property="Padding" Value="4,2,24,2" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinDropDownHeight" Value="24" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="AllowDropDownResizing" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkBlueBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundVeryLightGrayBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundLightGrayBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:CustomComboEditor">
                    <Grid x:Name="main" igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Border x:Name="ContentPresenterBorder">
                            <Grid x:Name="gridLayout" ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition MinWidth="23" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="Border"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                                <Popup
                                    x:Name="Popup"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    VerticalAlignment="Bottom"
                                    igPrim:XamlHelper.SnapsToDevicePixels="True"
                                    AllowsTransparency="True"
                                    IsOpen="False">
                                    <Grid Margin="0,0,10,10" Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Border
                                            x:Name="RootPopupElement"
                                            Grid.Row="1"
                                            Width="Auto"
                                            Height="Auto"
                                            MinHeight="{TemplateBinding MinDropDownHeight}"
                                            MaxWidth="{TemplateBinding MaxDropDownWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            Margin="0,0,0,-1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            Background="{StaticResource BackgroundWhiteBrush}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0,1,0,0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <igPrim:ItemsPanel x:Name="ItemsPanel" Margin="0" VerticalAlignment="Top" />
                                                <ScrollBar
                                                    x:Name="VerticalScrollBar"
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    Style="{StaticResource ScrollBar.Default.Style}" />
                                                <ScrollBar
                                                    x:Name="HorizontalScrollBar"
                                                    Grid.Row="1"
                                                    Grid.Column="0"
                                                    Style="{StaticResource ScrollBar.Default.Style}" />
                                            </Grid>
                                        </Border>
                                        <igPrim:PopupResizer
                                            x:Name="Resizer"
                                            Grid.Row="2"
                                            Grid.ColumnSpan="2"
                                            Background="{StaticResource BackgroundLightGrayBrush}"
                                            Popup="{Binding ElementName=Popup}"
                                            ResizeElement="{Binding ElementName=RootPopupElement}"
                                            Style="{StaticResource PopupResizerStyle}"
                                            Visibility="{Binding Path=AllowDropDownResizing, Converter={StaticResource BoolToVisibility}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <igPrim:PopupResizer.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </igPrim:PopupResizer.RenderTransform>
                                        </igPrim:PopupResizer>
                                        <Grid.Effect>
                                            <DropShadowEffect
                                                BlurRadius="8"
                                                Opacity="0.4"
                                                RenderingBias="Quality"
                                                ShadowDepth="4" />
                                        </Grid.Effect>
                                    </Grid>
                                </Popup>
                                <!--<Border
                                    x:Name="FocusVisualElement"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource BackgroundLightGrayBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />-->
                                <ToggleButton
                                    x:Name="ToggleButton"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsTabStop="False"
                                    Style="{StaticResource ComboEditorToggleButtonStyle}" />
                                <TextBlock
                                    x:Name="WaterMark"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Padding="6,2,24,4"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Text="{TemplateBinding EmptyText}"
                                    Visibility="Collapsed" />
                                <igPrim:SpecializedTextBox
                                    x:Name="TextBoxPresenter"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0,0,24,0"
                                    Padding="4,2,0,3"
                                    HorizontalAlignment="Stretch"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    IsTabStop="{TemplateBinding IsTabStop}"
                                    Style="{StaticResource SpecializedTextBoxStyle}"
                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboEditor}, Path=InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="Collapsed" />
                                <ContentControl
                                    x:Name="contentControl"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Margin="0,0,24,2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False">
                                    <Grid>
                                        <StackPanel
                                            x:Name="MultiSelectContentPanel"
                                            Margin="6,0,0,0"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Orientation="Horizontal" />
                                    </Grid>
                                </ContentControl>
                            </Grid>
                        </Border>

                        <Border
                            x:Name="ValidationErrorElement"
                            Grid.ColumnSpan="2"
                            BorderBrush="{StaticResource ErrorRedBrush}"
                            BorderThickness="1"
                            CornerRadius="1"
                            Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip
                                    x:Name="validationTooltip"
                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Right"
                                    PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    --&gt;
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid
                                Width="12"
                                Height="12"
                                Margin="1,-4,-4,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Background="Transparent">
                                <Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ErrorRedBrush}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="main"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.3"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>-->
                            <VisualStateGroup x:Name="ModeStates">
                                <VisualState x:Name="Selectable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectContentPanel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectContentPanel" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,10,16,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WaterMarkStates">
                                <VisualState x:Name="WaterMarkHidden" />
                                <VisualState x:Name="WaterMarkVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WaterMark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Closed" />
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBlackBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextBoxPresenter" Storyboard.TargetProperty="Foreground" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ForegroundBlackBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PositionStates">
                                <VisualState x:Name="Below" />
                                <VisualState x:Name="Above">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Position">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <igPrim:ResizerPosition>Above</igPrim:ResizerPosition>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Resizer" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Int32>0</system:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <system:Boolean>True</system:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BackgroundAquaBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                            <Setter TargetName="TextBoxPresenter" Property="Margin" Value="0,0,24,0" />
                            <Setter TargetName="TextBoxPresenter" Property="Padding" Value="4,2,0,3" />
                        </Trigger>
                        <!--<Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="FocusVisualElement" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusVisualElement" Property="Background" Value="{StaticResource ComboBoxFocusedBorderBrush}" />
                            <Setter TargetName="TextBoxPresenter" Property="Margin" Value="0,0,24,0" />
                            <Setter TargetName="TextBoxPresenter" Property="Padding" Value="4,2,0,3" />
                            <Setter TargetName="TextBoxPresenter" Property="CaretBrush" Value="{StaticResource CaretActiveForegroundBrush}" />
                        </Trigger>-->
                        <!--<DataTrigger Binding="{Binding IsFocused, ElementName=TextBoxPresenter}" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBoxFocusedBorderBrush}" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource XamComboEditorStyle}" TargetType="{x:Type local:CustomComboEditor}" />

</ResourceDictionary>
